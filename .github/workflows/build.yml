name: Build

on:
  push:

jobs:
  build-test:
    name: Build Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [14]

    steps:
      # Checkout repository.
      - name: Checkout repository
        uses: actions/checkout@v2

      # Cache node modules.
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Setup node.
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
          registry-url: https://registry.npmjs.org/

      # Install packages.
      - name: Install packages
        run: npm i --also=dev

      # Run build.
      - name: Run build
        run: npm run build

  build:
    name: Build
    needs: build-test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [14]

    steps:
      # Checkout repository.
      - name: Checkout repository
        uses: actions/checkout@v2

      # Cache node modules.
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Setup node.
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
          registry-url: https://registry.npmjs.org/

      # Install packages.
      - name: Install packages
        run: npm i --also=dev

      # Run build.
      - name: Run build
        run: npm run build

      # Push build.
      - name: Push build
        run: |
          REPO="https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          TARGET_BRANCH="build"
          git clone $REPO out -b $TARGET_BRANCH
          rm -rfv out/dist/*
          rsync -vaI package.json out/
          rsync -vaI README.md out/
          rsync -vaI dist/ out/dist
          cd out
          git add --all .
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_EMAIL}"
          git commit -m "build: tsc build for ${GITHUB_SHA}" || true
          git push origin $TARGET_BRANCH
        env:
          GITHUB_TOKEN: ${{ secrets.BUILD_TOKEN }}
          GITHUB_ACTOR: BR88C
          GITHUB_EMAIL: br88c@badfirmware.com